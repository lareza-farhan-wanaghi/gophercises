{{template "base" . }}

{{define "title"}}
    Choose your own adventure
{{end}}

{{define "content"}}
    <h2 class="mt-5" id="title">
        HOME
    </h2>
    <img class="mb-3"src="" height="150" alt=" " id="demo_image"/>
    <form action="" id="upload_image" autocomplete="off" novalidate="">
        <div class="mb-2">
            <h6>Please select an image:</h6>
        </div>
        <div class="mb-3">
            <input required="" type="file" id="upload_image_file" name="upload_image_file" accept="image/*" onchange="showDemoImage()">
        </div>
        <a class="btn btn-primary"  id="submit_upload_image" href="javascript:void(0)" class="btn btn-primary" onclick="submitUploadImage()">SUBMIT</a>
    </form>
    <form action="" id="choose_mode" autocomplete="off" novalidate="" class="d-none">
        <div class="mb-2">
            <h5>Please select a mode:</h5>
        </div>
        <div class="container p-0 mb-3" >
            <div class="row row-cols-3 g-3" id="choose_mode_row">
            </div>
        </div>
        <a class="btn btn-primary mt-2" id="submit_choose_mode" href="javascript:void(0)" class="btn btn-primary" onclick="submitChoosMode()">SUBMIT</a>
    </form>
    <div class="container p-0 mb-3 d-none" id="download_image">
        <div class="mb-2">
            <h6>Download your favorite images!</h6>
        </div>
        <div id="download_image_row" class="row row-cols-3 g-3" >
        </div>
    </div>
    <div id="processing" class="text-center d-none">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
{{end}}

{{define "js"}}
<script>
const API="{{.API}}"

function toggleProcessingIcon(isActive) {
    const processingLogo = document.getElementById("processing");
    if (isActive){
        const uploadImageForm =  document.getElementById("upload_image");
        const chooseModeForm =  document.getElementById("choose_mode");
        const downloadImage =  document.getElementById("download_image");
        uploadImageForm.classList.add("d-none");
        chooseModeForm.classList.add("d-none");
        downloadImage.classList.add("d-none");
        processingLogo.classList.remove("d-none");
    } else {
        processingLogo.classList.add("d-none");
    }
}

function showDemoImage() {
    if (window.File && window.FileReader && window.FileList && window.Blob) {
        const demoImage = document.getElementById('demo_image');
        const fileInput = document.getElementById("upload_image_file");
        const reader = new FileReader();
        reader.onload = function (event) {
            demoImage.src = reader.result;
        }
        reader.readAsDataURL(fileInput.files[0]);
    } else {
        alert("Your browser is too old to support HTML5 File API");    
    }
}

function showChooseModeForm(payload){
    const chooseModeForm = document.getElementById("choose_mode");
    const chooseModeRow = document.getElementById("choose_mode_row");
    const data = payload.data;
    chooseModeRow.innerHTML="";
    for (var i = 0; i < data.length; i++) {
        chooseModeRow.innerHTML+=
        `   <div class="col d-flex flex-column align-items-start">
                <div class="me-3 w-100">
                    <input type="radio" name="mode" id="${i}"/>
                    <label for="${i}">
                        <p class="d-inline">${i+1}. ${data[i].name}</p>
                    </label>
                </div>
                <div class="w-100">
                    <label for="${i}">
                        <img class="w-100" src="data:image/png;base64,${data[i].image}" alt="mode" />
                    </label>
                </div>
            </div>`;
    }
    chooseModeForm.classList.remove("d-none");
}

function showDownloadImage(payload) {
    const dowloadImage = document.getElementById("download_image");
    const dowloadImageRow = document.getElementById("download_image_row");
    const data = payload.data;
    dowloadImageRow.innerHTML="";
    for (var i = 0; i < data.length; i++) {
        dowloadImageRow.innerHTML+=
        `   <div class="col d-flex flex-column align-items-center">
                <div class="w-100">
                    <p class="d-inline">${i+1}. ${data[i].name}</p>
                </div>
                <div class="w-100">
                    <img class="w-100" src="data:image/png;base64,${data[i].image}" alt="mode" />
                </div>
                <div class="w-100 text-center">
                    <a class="btn btn-primary mt-3" href="data:image/png;base64,${data[i].image}" download>
                        Download
                    </a>
                </div>
            </div>`;
    }
    dowloadImage.classList.remove("d-none");
}

function submitUploadImage() {
    const form = document.getElementById("upload_image");
    const fileInput = document.getElementById("upload_image_file");
    if (form.checkValidity() === false) {
        this.event.stopPropagation();    
        this.event.preventDefault();
        form.classList.add("was-validated");
        return;
    }
    form.classList.add("was-validated");
    toggleProcessingIcon(true);

    const formData = new FormData();
    formData.append('file', fileInput.files[0]);

    const requestOptions = {
        method: 'post',
        body: formData,
    }

    fetch(`${API}/api/sample-modes`, requestOptions)
        .then(response => response.json())
        .then(response => {
            toggleProcessingIcon(false);
            showChooseModeForm(response)
        })
        .catch(err=> {
            console.log("err");
            console.log(err)
            toggleProcessingIcon(false);
            location.reload()
        })
}

function submitChoosMode(){
    const form = document.getElementById("choose_mode");
    const fileInput = document.getElementById("upload_image_file");
    if (form.checkValidity() === false) {
        this.event.stopPropagation();    
        this.event.preventDefault();
        form.classList.add("was-validated");
        console.log ("form is invalid")
        return;
    }
    form.classList.add("was-validated");
    toggleProcessingIcon(true);

    const formData = new FormData();
    formData.append('file', fileInput.files[0]);

    const requestOptions = {
        method: 'post',
        body: formData,
    }

    const mode=document.querySelector('input[name="mode"]:checked').id;
    fetch(`${API}/api/sample-ns?m=${mode}`, requestOptions)
        .then(response => response.json())
        .then(response => {
            toggleProcessingIcon(false);
            showDownloadImage(response)
        })
        .catch(err=> {
            console.log("err");
            console.log(err)
            toggleProcessingIcon(false);
            location.reload()
        })
}
</script>
{{end}}